#!/usr/bin/bash
shopt -s extglob
source common_functions
if [[ $DB = '' ]]
then
	echo "Error!! You should connect to DB first"
	exit
fi
cd $HOME/DBMS_Project/Databases/$DB
#######################################################################################
<< COMMENT
	Function to delte all rows "leave the table empty" except the columns names
COMMENT

function delete_all(){

	# Check if the table entered by user is not found
	check_table $1
	temp=$? 		# temporary variable to check the return of the function

	if [[ $temp != 1 ]]
	then
		echo "Error : table not found"
		exit
	fi

	sed -i '1!d' "$1"

}


#######################################################################################
<< COMMENT
	Function to delete specific row "Based on the condition in the query"
COMMENT

function delete_row(){

	# Check if the table entered by user is not found
	check_table $1
	temp=$? 		# temporary variable to check the return of the function
	
	if [[ $temp != 1 ]]
	then
		echo "Error : table not found"
		exit
	fi

	row=$(awk -v column=$column -v key=$last_argument '
		BEGIN{
			FS=","
			res=0		# The index of the column that is in the condition
			row=0		# The row number that will be deleted
		}
		{
			if(NR==1){
				for(i=1;i<=NF;i++){
					if(column==$i){
						res=i
					}
					
				}
			}else
			{
				if($res==key){
					row=NR
					exit			# To allow delete of the first match only "If this line is deleted the code will delete the last match"
				}
			}
			#print $0
		}

		END{
			printf "%d", row
		}
		

	'  "$1")
	
	# "To check if the row value dosen't change so no record was found"
	if [[ $row == 0 ]]
	then
		echo "There are no records in the database that match this condition."
	else
		sed -i "${row}d" "$1"
		echo "1 row deleted successfully"
	fi

}

#######################################################################################
delete_pattern="^from\s+[a-zA-Z_]+\s+where [a-zA-Z_]+ = .+$"
delete_all_pattern="^all\s+from\s+[a-zA-Z_]+$"
user_input="$*"                 # The query entered by the user all in one line
query_flag=0			# A flag to know if it's a delete or delete all
# Check the user update query syntax
if [[ $user_input =~ $delete_pattern ]] 
then
	echo "Valid delete statement: $user_input"
	query_flag=0
	column=$(echo "$user_input" | grep -oP 'where\s+\K[a-zA-Z_]+(?=\s*=)') # to extract the column name of the condition from the query 
elif [[ $user_input =~ $delete_all_pattern ]]
then
	echo "Valid delete all statement: $user_input"
	query_flag=1
else
	echo "Syntax Error: There are Missing Some Arguments. "
	exit
fi

last_argument="${!#}"		# The value of the condition that is entered by the user.


if [[ $query_flag == 0 ]]
then
	delete_row $2 $4 $last_argument $column
else
	delete_all $3
fi



#cat "$3"_data














